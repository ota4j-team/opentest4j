/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j;

import org.opentest4j.debug.DebugInformation;
import org.opentest4j.debug.DebuggableObject;

/**
 * <p>
 * {@code AssertionFailedException} is an <em>initial draft</em> for a common base class for test-related assertion
 * failures.
 * </p>
 * <dl>
 * <dt><strong>WARNING:</strong></dt>
 * <dd>this is a <em>work in progress</em> and is therefore guaranteed to undergo heavy revisions in the near future
 * based on community feedback.</dd>
 * </dl>
 * <p>
 *
 * @author Sam Brannen
 * @author Marc Philipp
 * @author Mark Michaelis
 * @since 1.0
 */
public class AssertionFailedException extends AssertionError implements DebuggableObject {

	private static final long serialVersionUID = 1L;
	private final DebugInformation debugInformation;

	public AssertionFailedException() {
		this((DebugInformation) null);
	}

	public AssertionFailedException(String message) {
		this(message, (DebugInformation) null);
	}

	public AssertionFailedException(String message, Throwable cause) {
		this(message, null, cause);
	}

	public AssertionFailedException(Throwable cause) {
		this((DebugInformation) null, cause);
	}

	public AssertionFailedException(DebugInformation debugInformation) {
		this.debugInformation = debugInformation;
	}

	public AssertionFailedException(String message, DebugInformation debugInformation) {
		super(message);
		this.debugInformation = debugInformation;
	}

	public AssertionFailedException(String message, DebugInformation debugInformation, Throwable cause) {
		super(message);
		this.initCause(cause);
		this.debugInformation = debugInformation;
	}

	public AssertionFailedException(DebugInformation debugInformation, Throwable cause) {
		super(cause);
		this.debugInformation = debugInformation;
	}

	@Override
	public DebugInformation getDebugInformation() {
		return this.debugInformation;
	}

	@Override
	public boolean hasDebugInformation() {
		return this.debugInformation != null;
	}
}
