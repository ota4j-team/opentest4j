/*
 * Copyright 2015-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j;

/**
 * {@code IAssertionFailedError} is a common interface for test-related
 * {@link AssertionError AssertionErrors} that compare two values.
 *
 * <p>In addition to a message and a cause, classes that implement
 * this interface store the expected and actual values of an assertion
 * using the {@link ValueWrapper} type.
 *
 * <p>The reference implementation for this interface is
 * {@link AssertionFailedError}. As an alternative to inheriting from
 * {@link AssertionFailedError}, assertion frameworks can implement
 * this interface in the class hierarchy of their own assertions.
 * This enables them to leverage OpenTest4J compatibility without
 * changing the class hierarchy of their own assertions (which could
 * break backwards compatibility for users of their framework).
 *
 * @author Sam Brannen
 * @author Marc Philipp
 * @since 1.0
 */
public interface IAssertionFailedError {

	/**
	 * Returns {@code true} if an <em>expected value</em> was supplied via an
	 * appropriate constructor.
	 *
	 * @see #getExpected()
	 */
	public boolean isExpectedDefined();

	/**
	 * Returns {@code true} if an <em>actual value</em> was supplied via an
	 * appropriate constructor.
	 *
	 * @see #getActual()
	 */
	public boolean isActualDefined();

	/**
	 * Returns the wrapped expected value if it is defined; otherwise {@code null}.
	 *
	 * @see #isExpectedDefined()
	 */
	public ValueWrapper getExpected();

	/**
	 * Returns the wrapped actual value if it is defined; otherwise {@code null}.
	 *
	 * @see #isActualDefined()
	 */
	public ValueWrapper getActual();
}
