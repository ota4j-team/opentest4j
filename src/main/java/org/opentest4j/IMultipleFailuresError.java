/*
 * Copyright 2015-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j;

import java.util.List;

/**
 * {@link IMultipleFailuresError} is an interface for subclasses of
 * {@link AssertionError} which aggregate multiple {@code AssertionErrors}
 * thrown in a given context (i.e., typically within the invocation of a
 * single test).
 *
 * <p>{@link MultipleFailuresError} exists as a concrete implementation of
 * this interface, and is preferred in new implementations. This
 * interface exists as a way of retro-fitting OpenTest4J multiple-failure
 * support into assertion frameworks that already have their own assertion
 * hierarchy, in a way that allows them to preserve backwards compatibility.
 *
 * @author Johannes Link
 * @author Sam Brannen
 * @author Marc Philipp
 * @since 1.0
 */
public interface IMultipleFailuresError<T extends Throwable> {

	/**
	 * Returns the heading that describes this class of errors.
	 * @return The string describing this group of failures.
	 */
	public String getHeading();

	/**
	 * Retrieves the list of individual failures represented by this error.
	 * @return The list of individual failures represented by this error.
	 * @see #hasFailures()
	 */
	public List<T> getFailures();

	/**
	 * Indicates whether this error has any individual failures.
	 * @return <tt>true</tt> if the erro has individual failures; <tt>false</tt>
	 * if it has none.
	 *
	 * @see #getFailures()
	 */
	public boolean hasFailures();
}
