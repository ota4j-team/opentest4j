/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j;

import java.io.Serializable;

public final class ValueWrapper implements Serializable {

	private static final long serialVersionUID = 1L;

	private final Class<?> type;
	private final Serializable value;
	private final String stringRepresentation;
	private final int identityHashCode;

	public ValueWrapper(Object value) {
		this.value = value instanceof Serializable ? (Serializable) value : null;
		this.type = value != null ? value.getClass() : null;
		this.stringRepresentation = String.valueOf(value);
		this.identityHashCode = System.identityHashCode(value);
	}

	public Class<?> getType() {
		return type;
	}

	public Serializable getValue() {
		return value;
	}

	public String getStringRepresentation() {
		return stringRepresentation;
	}

	public int getIdentityHashCode() {
		return identityHashCode;
	}

	@Override
	public String toString() {
		if (type == null) {
			return "null";
		}
		return stringRepresentation + " (" + type.getName() + "@" + Integer.toHexString(identityHashCode) + ")";
	}
}
