/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j.debug.serializer;

import static java.util.Collections.unmodifiableMap;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

/**
 * Abstract {@code ValueWrapper} which provides some default handling for additional data.
 *
 * @author Mark Michaelis
 * @since 1.0
 */
public abstract class AbstractValueWrapper implements ValueWrapper {
	private final Map<String, Serializable> data = new HashMap<String, Serializable>();

	public Serializable putData(String key, Serializable value) {
		return this.data.put(key, value);
	}

	public void putAllData(Map<String, ? extends Serializable> otherMap) {
		this.data.putAll(otherMap);
	}

	@Override
	public Map<String, Serializable> getData() {
		return unmodifiableMap(data);
	}
}
