/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j.debug.serializer;

import java.io.Serializable;

/**
 * Default value serializer which just checks if the given object is already serializable. If the object is already
 * serializable it will be returned as is.
 *
 * @author Mark Michaelis
 * @since 1.0
 */
public class DefaultValueSerializer implements ValueSerializer {

	/**
	 * Returns the given object iff. the object itself is serializable.
	 *
	 * @param object object to make serializable; will be non-null
	 * @return null iff. the object is not serializable; otherwise the object itself
	 */
	@Override
	public Serializable serialize(Object object) {
		if (object instanceof Serializable) {
			return (Serializable) object;
		}
		return null;
	}
}
