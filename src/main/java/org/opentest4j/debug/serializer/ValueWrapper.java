/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j.debug.serializer;

import java.io.Serializable;
import java.util.Map;

/**
 * Wraps an object into a serializable representation. The wrapped object itself might vary from the original object,
 * but should provide enough information to understand the original version for debugging purpose.
 *
 * @author Mark Michaelis
 * @since 1.0
 */
public interface ValueWrapper extends Serializable {

	/**
	 * The value itself or its rebuild representation after serialization/deserialization.
	 *
	 * @return wrapped value
	 */
	Object getValue();

	/**
	 * <p>
	 * Additional data of the original value which might have gone lost during the serialization/deserialization process
	 * but which might be important for debugging purpose.
	 * </p>
	 * <dl>
	 * <dt><strong>Note:</strong></dt>
	 * <dd>Mind that your map needs to be serializable or that you need to ensure to process it in the
	 * serialization/deserialization process.</dd>
	 * </dl>
	 *
	 * @return data; non-null but might be empty
	 */
	Map<String, Serializable> getData();
}
