/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j.fixtures;

import static java.util.Objects.requireNonNull;

/**
 * Base class for simple test fixtures.
 */
public abstract class SimpleTestFixture implements TestFixture {

	@Override
	public final void initialize(FixtureContext context) throws Exception {
		requireNonNull(context);
		beforeTest();
		context.addTearDown(new TearDown() {
			public void tearDown() throws Exception {
				afterTest();
			}
		});
		context.addTestPostcondition(new TestPostcondition() {
			public void verify() throws Exception {
				SimpleTestFixture.this.verify();
			}
		});
	}

	/**
	 * Override to set up your test fixture before the test starts.
	 *
	 * @throws Exception
	 *             if setup fails (which will disable {@link #afterTest()})
	 */
	protected void beforeTest() throws Exception {
	}

	/**
	 * Verifies any postconditions on the test fixture. Only called if the test
	 * passes, and if no previous postcondition fails (which means it is not
	 * called if {@link #beforeTest()} throws an exception).
	 *
	 * @throws Exception
	 *             if verification fails (which will cause the test method to
	 *             fail)
	 */
	protected void verify() throws Exception {
	}

	/**
	 * Override to tear down your test fixture after the test run completes.
	 * This will be called whether the test passes or fails, but will not be
	 * called unless {@link #beforeTest()} is called and doesn't throw an
	 * exception.
	 *
	 * @throws Exception
	 *             if setup fails (which will cause the test method to fail)
	 */
	protected void afterTest() throws Exception {
	}
}
