/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j.fixtures;

import static java.util.Collections.unmodifiableList;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

class Utils {

	public static <T> List<T> toUnmodifiableList(List<T> list) {
		return unmodifiableList(new ArrayList<T>(list));
	}

	@SafeVarargs
	public static <T> List<T> toUnmodifiableList(T... elements) {
		return toUnmodifiableList(Arrays.asList(elements));
	}

	public static Exception rethrowAsException(Throwable e) throws Exception {
		Utils.<Exception> rethrow(e);
		return null; // we never get here
	}

	@SuppressWarnings("unchecked")
	private static <T extends Throwable> void rethrow(Throwable e) throws T {
		throw (T) e;
	}

	private Utils() {
	}
}
