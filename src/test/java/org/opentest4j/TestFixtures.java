/*
 * Copyright 2015-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentest4j;

import java.io.Serializable;

/**
 * Test fixtures used for several tests.
 *
 * @author Mark Michaelis
 * @since 1.0
 */
public final class TestFixtures {

	public static class SomeNonSerializable {
		@Override
		public String toString() {
			return "NonSerializable{}";
		}
	}

	public static class SomeSerializable implements Serializable {

		private static final long serialVersionUID = 1299409313921059249L;
		private final Serializable value;

		public SomeSerializable() {
			this("someValue");
		}

		public SomeSerializable(Serializable value) {
			this.value = value;
		}

		@Override
		public int hashCode() {
			return this.value != null ? this.value.hashCode() : 0;
		}

		@Override
		public boolean equals(Object o) {
			if (this == o) {
				return true;
			}
			if (o == null || getClass() != o.getClass()) {
				return false;
			}

			SomeSerializable that = (SomeSerializable) o;

			return this.value != null ? this.value.equals(that.value) : that.value == null;
		}

		@Override
		public String toString() {
			return "SomeSerializable{value=" + this.value + '}';
		}

	}
}
